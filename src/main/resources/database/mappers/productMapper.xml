<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.pj.market.product.ProductDAO">
    	<delete id="fileDelete" parameterType="ProductFileDTO">
 			DELETE PRODUCTFILE WHERE
			FILENUM = #{fileNum}
    	</delete>
    	
    	<select id="listFile" parameterType="ProductDTO" resultType="ProductFileDTO">
    		SELECT * FROM PRODUCTFILE
    		WHERE PRODUCTNUM = #{productNum}
    	</select>
    	
    	<!-- 상품 업데이트 -->
    	<update id="update" parameterType="ProductDTO">
    		UPDATE PRODUCT1 
    		SET PRODUCTNAME=#{productName}, PRODUCTPRICE=#{productPrice}, PRODUCTDETAIL=#{productDetail}, PRODUCTCOUNT=#{productCount}, SALES=#{sales}, CATEGORY=#{category}
    		WHERE PRODUCTNUM=#{productNum}
    	</update>
    	
    	<!-- 상품 사진 추가 -->
    	<insert id="addFile" parameterType="ProductFileDTO">
    		<selectKey keyProperty="productNum" order="BEFORE" resultType="Long">
    			SELECT MAX(PRODUCTNUM) FROM PRODUCT1
    		</selectKey>
    		INSERT INTO PRODUCTFILE (PRODUCTNUM, FILENAME, ORINAME, FILENUM) 
    		VALUES
    		(#{productNum}, #{fileName}, #{oriName}, #{fileNum})
    	</insert>
    	
    	<!-- 상품 추가 -->
        <insert id="add" parameterType="ProductDTO">
            <selectKey keyProperty="productNum" order="BEFORE" resultType="Long">
    			SELECT LAST_INSERT_ID()
    		</selectKey>
    		INSERT INTO PRODUCT1 (PRODUCTNUM, PRODUCTNAME, PRODUCTPRICE, PRODUCTDETAIL, CATEGORY, PRODUCTCOUNT, SALES)
    		VALUES 
    		(#{productNum}, #{productName}, #{productPrice}, #{productDetail}, #{category}, #{productCount}, 0)
    	</insert>

    	<delete id="delete" parameterType="ProductDTO">
    		DELETE PRODUCT1 WHERE PRODUCTNUM = #{productNum}
    	</delete>
    	
    	<select id="detail" parameterType="ProductDTO" resultMap="detailResult">
    		SELECT P.*, PF.*
			FROM 
				PRODUCT1 P
    				LEFT OUTER JOIN
    			PRODUCTFILE PF
    			ON P.PRODUCTNUM = PF.PRODUCTNUM
    		WHERE P.PRODUCTNUM = #{productNum}
    	</select>
    	
    	<resultMap type="ProductDTO" id="detailResult">
    		<id column="productNum" property="productNum"/>
    		<result column="productName" property="productName"/>
    		<result column="productPrice" property="productPrice"/>
    		<result column="productDetail" property="productDetail"/>
    		<result column="category" property="category"/>
    		<collection property="fileDTOs" javaType="List" ofType="ProductFileDTO">
    			<id column="fileNum" property="fileNum"/>
    			<result column="fileName" property="fileName"/>
    			<result column="oriName" property="oriName"/>
    		</collection>
    	</resultMap>
        
        <select id="total" resultType="Long" parameterType="ProductPager">
        	SELECT COUNT(PRODUCTNUM) FROM PRODUCT1
        	WHERE PRODUCTNUM>0
        	AND PRODUCTNAME LIKE '%' || #{search} || '%'
        </select>
			
    	<select id="list" parameterType="ProductPager" resultMap="detailResult">
    		SELECT * FROM PRODUCT1
	    		LEFT JOIN
	    		PRODUCTFILE PF
				USING (PRODUCTNUM)
				GROUP BY PRODUCTNUM
			<choose>
	    		<when test="category==1">
	    			WHERE CATEGORY =1
	    		</when>
	    		<when test="category==2">
	    			WHERE CATEGORY =2
	    		</when>
	    		<when test="category==3">
	    			WHERE CATEGORY =3
	    		</when>
	    	</choose>
	    	ORDER BY PRODUCTNUM DESC
	    	LIMIT #{startRow}, #{lastRow}
    	</select>
    	
    	<!-- index lowPrice -->
    	<select id="lowPrice" resultMap="detailResult">
    		SELECT * FROM PRODUCT1
				LEFT JOIN
					PRODUCTFILE PF
					USING (PRODUCTNUM)
			ORDER BY PRODUCTPRICE ASC		
    	</select>
    </mapper>